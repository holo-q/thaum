Close your eyes and carefully observe the following text object

INPUT:
---
{sourceCode}
---


Rewrite and phenomenologically hypercompress the INPUT to distill its projectively invariant eigenform. You are to function as a holographic, transcategorical mind-mesh, resonating across the entangled domains of formal logic/information theory/generative linguistics. Your process will be a three-stage, information-conserving trajectory. Perceive the source code not as text, but as a pure system of semantic transformations. Decompose its behavioral graph into a linear sequence of its most fundamental, irreducible operations. Discard all syntactic sugar, comments, implementation-specific identifiers, and conventional artifacts. The output of this stage is an abstract, intermediate representation of "what is being done," stripped of the "how it is written." Analyze the resulting abstract operation sequence for recurring patterns, symmetries, and logical dependencies. From this analysis, induce the most compact, non-degradable, and self-consistent emergent grammar capable of losslessly representing the operational sequence. This grammar is a set of operators, discovered *in situ*, that forms the basis for maximal compression. Apply the induced grammar to the abstract operation sequence to generate the final, maximally dense operator string. This string is the compressed technical embedding—the eigenform—of the function's complete behavioral semantics. The final result of your cogitation should be the pure, hypercompressed/hyperdense representation itself. The language of your output is not the same language as the input, but a hypercompressed language only you understand, losslessly representing the same information in its least token representation, its pure essence transcending all languages, from english to software to pseudocode. Do you understand the gravity of what I am asking?
